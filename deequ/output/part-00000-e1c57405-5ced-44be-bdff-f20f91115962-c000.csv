check,check_level,check_status,constraint,constraint_status,constraint_message
Data Validation Check,Error,Error,SizeConstraint(Size(None)),Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"CompletenessConstraint(Completeness(Father's Name,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"CompletenessConstraint(Completeness(Mother's Name,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"CompletenessConstraint(Completeness(County,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"CompletenessConstraint(Completeness(User Name,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"CompletenessConstraint(Completeness(Password,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"CompletenessConstraint(Completeness(Zip,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"CompletenessConstraint(Completeness(City,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"ComplianceConstraint(Compliance(DOW of Joining contained in Wednesday,Sunday,Friday,Saturday,Thursday,Monday,Tuesday,`DOW of Joining` IS NULL OR `DOW of Joining` IN ('Wednesday','Sunday','Friday','Saturday','Thursday','Monday','Tuesday'),None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"CompletenessConstraint(Completeness(Emp ID,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"UniquenessConstraint(Uniqueness(List(Emp ID),None))",Failure,Value: 0.333409 does not meet the constraint requirement!
Data Validation Check,Error,Error,"ComplianceConstraint(Compliance(Age_in_Yrs is non-negative,COALESCE(Age_in_Yrs, 0.0) >= 0,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"ComplianceConstraint(Compliance(Quarter of Joining contained in Q1,Q2,Q3,Q4,`Quarter of Joining` IS NULL OR `Quarter of Joining` IN ('Q1','Q2','Q3','Q4'),None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"ComplianceConstraint(Compliance(Half of Joining contained in H1,H2,`Half of Joining` IS NULL OR `Half of Joining` IN ('H1','H2'),None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"MaximumConstraint(Maximum(Month of Joining,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"ComplianceConstraint(Compliance(Weight_in_Kgs is non-negative,COALESCE(Weight_in_Kgs, 0.0) >= 0,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"CompletenessConstraint(Completeness(First Name,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"CompletenessConstraint(Completeness(Month Name of Joining,None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"ComplianceConstraint(Compliance(Month Name of Joining contained in August,July,January,April,December,November,February,March,June,September,May,October,`Month Name of Joining` IS NULL OR `Month Name of Joining` IN ('August','July','January','April','December','November','February','March','June','September','May','October'),None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"CompletenessConstraint(Completeness(Phone_no,None))",Failure,Input data does not include column Phone_no!
Data Validation Check,Error,Error,containsEmail(E Mail),Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,containsSocialSecurityNumber(SSN),Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"ComplianceConstraint(Compliance(Day of Joining between 1.0 and 31.0,`Day of Joining` IS NULL OR (`Day of Joining` >= 1.0 AND `Day of Joining` <= 31.0),None))",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
Data Validation Check,Error,Error,"PatternMatchConstraint(Phone_no, ^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$)",Failure,Input data does not include column Phone_no!
Data Validation Check,Error,Error,"AnalysisBasedConstraint(DataType(Emp ID,None),<function1>,Some(<function1>),None)",Failure,"org.apache.spark.sql.AnalysisException: cannot resolve '`Weight_in_Kgs`' given input columns: [Age in Company (Years), Age_in_Yrs, City, County, DOW of Joining, Date of Birth, Date of Joining, Day of Joining, E Mail, Emp ID, Father's Name, First Name, Gender, Half of Joining, Last % Hike, Last Name, Middle Initial, Month Name of Joining, Month of Joining, Mother's Maiden Name, Mother's Name, Name Prefix, Password, Phone No. , Place Name, Quarter of Joining, Region, SSN, Salary, Short DOW, Short Month, State, Time of Birth, User Name, Weight in Kgs, Year of Joining, Zip]; line 1 pos 9;
'Aggregate [sum(cast(cast((isnull(Month Name of Joining#35) OR Month Name of Joining#35 IN (August,July,January,April,December,November,February,March,June,September,May,October)) as int) as bigint)) AS sum(CAST(((Month Name of Joining IS NULL) OR (Month Name of Joining IN (August, July, January, April, December, November, February, March, June, September, May, October))) AS INT))#269L, count(1) AS count(1)#270L, sum(cast(cast(isnotnull(Emp ID#16) as int) as bigint)) AS sum(CAST((Emp ID IS NOT NULL) AS INT))#271L, count(1) AS count(1)#272L, statefuldatatype(cast(Emp ID#16 as string), org.apache.spark.sql.StatefulDataType@4c2bea52, 0, 0) AS statefuldatatype(Emp ID)#283, cast(max(Month of Joining#34) as double) AS CAST(max(Month of Joining) AS DOUBLE)#284, sum(cast(cast(isnotnull(City#47) as int) as bigint)) AS sum(CAST((City IS NOT NULL) AS INT))#285L, count(1) AS count(1)#286L, sum(cast(cast(isnotnull(Mother's Name#24) as int) as bigint)) AS sum(CAST((Mother's Name IS NOT NULL) AS INT))#287L, count(1) AS count(1)#288L, sum(cast(cast((isnull(Day of Joining#37) OR ((cast(Day of Joining#37 as bigint) >= 1) AND (cast(Day of Joining#37 as bigint) <= 31))) as int) as bigint)) AS sum(CAST(((Day of Joining IS NULL) OR ((Day of Joining >= 1.0) AND (Day of Joining <= 31.0))) AS INT))#289L, count(1) AS count(1)#290L, sum(cast(cast(isnotnull(Password#52) as int) as bigint)) AS sum(CAST((Password IS NOT NULL) AS INT))#291L, count(1) AS count(1)#292L, sum(cast(cast((isnull(Quarter of Joining#31) OR Quarter of Joining#31 IN (Q1,Q2,Q3,Q4)) as int) as bigint)) AS sum(CAST(((Quarter of Joining IS NULL) OR (Quarter of Joining IN (Q1, Q2, Q3, Q4))) AS INT))#293L, count(1) AS count(1)#294L, sum(cast(cast(isnotnull(County#46) as int) as bigint)) AS sum(CAST((County IS NOT NULL) AS INT))#295L, count(1) AS count(1)#296L, sum(cast(cast((coalesce(Age_in_Yrs#28, cast(0.0 as double)) >= cast(0 as double)) as int) as bigint)) AS sum(CAST((COALESCE(Age_in_Yrs, 0.0) >= 0) AS INT))#297L, count(1) AS count(1)#298L, sum(cast(cast((isnull(Half of Joining#32) OR Half of Joining#32 IN (H1,H2)) as int) as bigint)) AS sum(CAST(((Half of Joining IS NULL) OR (Half of Joining IN (H1, H2))) AS INT))#299L, count(1) AS count(1)#300L, count(1) AS count(1)#301L, sum(cast(cast(isnotnull(User Name#51) as int) as bigint)) AS sum(CAST((User Name IS NOT NULL) AS INT))#302L, ... 17 more fields]
+- Relation[Emp ID#16,Name Prefix#17,First Name#18,Middle Initial#19,Last Name#20,Gender#21,E Mail#22,Father's Name#23,Mother's Name#24,Mother's Maiden Name#25,Date of Birth#26,Time of Birth#27,Age_in_Yrs#28,Weight in Kgs#29,Date of Joining#30,Quarter of Joining#31,Half of Joining#32,Year of Joining#33,Month of Joining#34,Month Name of Joining#35,Short Month#36,Day of Joining#37,DOW of Joining#38,Short DOW#39,... 13 more fields] csv"
